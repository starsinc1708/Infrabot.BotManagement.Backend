version: '3.4'

services:
  infrabot-api-gateway:
    image: infrabot-api
    build:
      context: .
      dockerfile: Infrabot.BotManagement.ApiGateway/Dockerfile
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__Kafka=kafka:9092
      - BotManagement__BaseUrl=http://bot-management-api:8080
    networks:
      - infrabot-network
    depends_on:
      - kafka
      - redis
      - bot-management-db
  
  bot-management-api:
    image: bot-management-api
    build:
      context: .
      dockerfile: Infrabot.BotManagement.WebAPI/Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - PostgreSQL__BotManagementDb=Host=bot-management-db;Port=5432;Database=bot_management;Username=postgres;Password=postgres
      - ConnectionStrings__Redis=redis:6379
    networks:
      - infrabot-network
    depends_on:
      - kafka
      - redis
      - bot-management-db
  
  bot-management-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: bot_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - infrabot-network
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - infrabot-network
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    hostname: kafka
    networks:
      - infrabot-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2


  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper
    networks:
      - infrabot-network
  
  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - infrabot-network
      
networks:
  infrabot-network:
    driver: bridge