version: '3.4'

services:
  infrabot-api-gateway:
    image: infrabot-api
    restart: unless-stopped
    build:
      context: .
      dockerfile: Infrabot.BotManagement.ApiGateway/Dockerfile
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__Kafka=kafka:9092
      - BotManagement__BaseUrl=http://bot-management-api:8080
    networks:
      - infrabot-network
    depends_on:
      - kafka
      - bot-management-api
  
  bot-management-api:
    image: bot-management-api
    restart: unless-stopped
    build:
      context: .
      dockerfile: Infrabot.BotManagement.WebAPI/Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - PostgreSQL__BotManagementDb=Host=bot-management-db;Port=5432;Database=bot_management;Username=postgres;Password=postgres
      - ConnectionStrings__Redis=redis:6379
    networks:
      - infrabot-network
    depends_on:
      - redis
      - bot-management-db
  
  bot-management-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: bot_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - infrabot-network
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    networks:
      - infrabot-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - infrabot-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    ports:
      - "9090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "Local Kafka"
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "192.168.0.101:9092"
    depends_on:
      - kafka
    networks:
      - infrabot-network
  
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - infrabot-network

networks:
  infrabot-network:
    driver: bridge

volumes:
  postgres_data:
  zookeeper_data:
  zookeeper_log:
  kafka_data:
  redis_data: