// <auto-generated />
using Infrabot.BotManagement.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrabot.BotManagement.Domain.Migrations
{
    [DbContext(typeof(BotManagementDbContext))]
    [Migration("20250218202313_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Infrabot.BotManagement.Domain.Models.BotModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BotId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BotId");

                    b.HasIndex("ModuleId");

                    b.ToTable("TgBotModules");
                });

            modelBuilder.Entity("Infrabot.BotManagement.Domain.Models.ModuleUpdateSettings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UpdateSettingsId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("UpdateSettingsId");

                    b.ToTable("TgModuleUpdateSettings");
                });

            modelBuilder.Entity("Infrabot.BotManagement.Domain.Models.ProcessingModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("HealthCheckEndpoint")
                        .HasColumnType("text");

                    b.Property<string>("IpAddress")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Infrabot.BotManagement.Domain.Models.TelegramBot", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("BotToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("CanConnectToBusiness")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanJoinGroups")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanReadAllGroupMessages")
                        .HasColumnType("boolean");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("HasMainWebApp")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("SupportsInlineQueries")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Bots");
                });

            modelBuilder.Entity("Infrabot.BotManagement.Shared.Models.UpdateSettings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("UpdateSource")
                        .HasColumnType("integer");

                    b.Property<int>("UpdateType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UpdateSource", "UpdateType")
                        .IsUnique();

                    b.ToTable("UpdateSettings");
                });

            modelBuilder.Entity("Infrabot.BotManagement.Domain.Models.BotModule", b =>
                {
                    b.HasOne("Infrabot.BotManagement.Domain.Models.TelegramBot", "Bot")
                        .WithMany("Modules")
                        .HasForeignKey("BotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrabot.BotManagement.Domain.Models.ProcessingModule", "Module")
                        .WithMany("TgBots")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bot");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Infrabot.BotManagement.Domain.Models.ModuleUpdateSettings", b =>
                {
                    b.HasOne("Infrabot.BotManagement.Domain.Models.ProcessingModule", "Module")
                        .WithMany("UpdateSettings")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrabot.BotManagement.Shared.Models.UpdateSettings", "UpdateSettings")
                        .WithMany("ModuleSettings")
                        .HasForeignKey("UpdateSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("UpdateSettings");
                });

            modelBuilder.Entity("Infrabot.BotManagement.Domain.Models.ProcessingModule", b =>
                {
                    b.Navigation("TgBots");

                    b.Navigation("UpdateSettings");
                });

            modelBuilder.Entity("Infrabot.BotManagement.Domain.Models.TelegramBot", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("Infrabot.BotManagement.Shared.Models.UpdateSettings", b =>
                {
                    b.Navigation("ModuleSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
